name: "Serverless Deploy"
description: "Deploy a service using serverless"
inputs:
  access_token:
    description: "A Github Access Token to download private dependencies"
    required: true
  aws-access-key-id:
    description: "The AWS access key id to identify the action"
    required: true
  aws-secret-access-key:
    description: "The AWS secret access key to identify the action"
    required: true
  aws-region:
    description: "The AWS region to deploy the service to"
    required: false
    default: "us-east-1"
  stage:
    description: "The stage to deploy the service"
    required: false
    default: "dev"
  cache_hit:
    description: "A boolean indicating if there was a cache hit"
    required: false
    default: "false"
  python_version:
    description: "Python version to use"
    required: false
    default: "3.7"
  aws-profile:
    description: "The stack to be deployed"
    required: true
    default: "finsusDev"
runs:
  using: "composite"
  steps:
    - name: Setup Python
      env:
        PYTHON_VERSION: ${{ inputs.python_version }}
      run: ${{ github.action_path }}/../common/python-setup.sh
      shell: bash
    - name: Install serverless dependencies
      env:
        CACHE_HIT: ${{ inputs.cache_hit }}
      run: ${{ github.action_path }}/../common/install-node-deps.sh
      shell: bash
    - name: Setup AWS credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        AWS_REGION: ${{ inputs.aws-region }}
        AWS_PROFILE: ${{ inputs.aws-profile }}
      run: |
        mkdir ~/.aws
        echo "[default]" >> ~/.aws/config
        echo "region = $AWS_REGION" >> ~/.aws/config
        echo "[$AWS_PROFILE]" >> ~/.aws/credentials
        echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
        echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials  
        echo "region = $AWS_REGION" >> ~/.aws/credentials  
      shell: bash
    - name: Deploy to the desired stage
      run: AWS_SDK_LOAD_CONFIG=1 npx serverless deploy --stack ${{ inputs.aws-profile }}
      shell: bash
